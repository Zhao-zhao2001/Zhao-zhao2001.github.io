<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo 建站笔记</title>
    <url>/2021/04/08/Hexo-%E5%BB%BA%E7%AB%99%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1>一、搭建Hexo框架</h1>
<p>本文基于windows操作系统搭建，hexo的相关操作可以用cmd命令台进行，也可以用下面安装的Git进行（推荐）；关于hexo主题的相关美化见后续文章，该系列可能会保持更新。另：本人也作为刚接触这里的新手，在文章中主要总结个人建站过程中的参考所得，望有不对的地方不吝赐教！</p>
<h2 id="1、设置淘宝镜像">1、设置淘宝镜像</h2>
<p>由于在windows上使用npm下载时可能会速度过慢，所以这里改为淘宝镜像网站：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry <span class="string">&quot;https://registry.npm.taobao.org&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="2、安装Git">2、安装Git</h2>
<p>Git官网地址：<a href="https://gitforwindows.org/">https://gitforwindows.org/</a></p>
<p>安装过程无脑“下一步”即可。</p>
<h2 id="3、安装Node-js">3、安装Node.js</h2>
<p>Node.js官网：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p>
<p>这里推荐安装LTS(长期支持)版，选择对应的系统版本即可。</p>
<p><img src="https://gitee.com/Zhao-zhao2001/images/raw/master/img/20210408-01.png" alt="image-20210408184444633"></p>
<h2 id="4、安装Hexo">4、安装Hexo</h2>
<p>可以自行创建目录，名称随意，例如D:\Hexo\myblog，并在myblog文件夹右键使用Git bash here(或者cmd进入该文件夹)，命令行输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装Hexo</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="comment">#初始化博客</span></span><br><span class="line">hexo init</span><br><span class="line"><span class="comment">#Hexo三连,分别为清空生成文件、生成网站文件、启动本地预览</span></span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>
<p>此时若没有错误情况，由于hexo默认位于4000端口开启，则可以在浏览器中打开<em><strong>localhost:4000</strong></em>，就可以看到已经初始化的Hexo博客，默认产生第一篇文章Hello world!此外也可以更换端口使用命令  <strong>hexo s -p 端口号</strong>  即可。</p>
<h2 id="5、博客部署">5、博客部署</h2>
<p>由于我个人搭建的时候服务器仍未达到备案的期限，所以这里介绍将个人博客部署到github上面，后续若部署到个人域名时再进行更新。<br>
首先，登录github创建一个新的仓库，并将仓库名命名为  <em><strong><a href="http://xn--eqr924avxo.github.io">用户名.github.io</a></strong></em>，注意这里仓库的名字是固定格式！！！<br>
打开博客根目录（Hexo/myblog)下的根配置文件  <em><strong>_config.yml</strong></em>  文件找到deploy项，修改如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">   <span class="built_in">type</span>: <span class="string">&#x27;git&#x27;</span></span><br><span class="line">   repo: https://github.com/用户名/仓库名</span><br><span class="line">   <span class="comment"># 如Https://github.com/zhangsan/zhangsan.github.io</span></span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure>
<p>注： 注意在本博客几乎所有配置文件中，冒号之后都留有空格</p>
<p>在进行上传之前，需要先在Git bash中进行对<strong><a href="http://user.name">user.name</a></strong>和<strong>user.email</strong>的设置，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Github用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;GitHub绑定邮箱&quot;</span></span><br><span class="line"><span class="comment">#最后再进行上传</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>他喵的现在Github时不时登录不上去，所以在进行hexo d部署的时候也经常会出现超时的错误，还是建议部署到自己的域名上去，后续部署时会对该文章进行更新的。</p>
<h1>二、基础配置</h1>
<h2 id="1、主题设置">1、主题设置</h2>
<p>hexo提供了大量可选的主题，参考网站：<a href="https://hexo.io/themes/">Hexo主题</a></p>
<p>在根目录配置文件中可以设置主题，这里以butterfly主题为例，修改<em><strong>theme</strong></em>字条即可：<br>
<img src="https://gitee.com/Zhao-zhao2001/images/raw/master/img/20210408204749.png" alt="alt 主题设置"></p>
<p>在上述网站或其他途径选择主题后需要将主题文件保存到**/themes**目录下，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装渲染插件</span></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>
<h2 id="2、基础页">2、基础页</h2>
<p>hexo创建页面的命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page 页面名称</span><br></pre></td></tr></table></figure>
<p>创建成功后会在命令行中提示新建页面的位置，对文件<strong><a href="http://index.md">index.md</a></strong>进行编辑可以修改页面布局。对不同主题，可以查看相应主题的文档使用，这里以butterfly主题对页面属性为例，如下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:center">解释</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">title</td>
<td style="text-align:center">【必需】页面标题</td>
</tr>
<tr>
<td style="text-align:center">date</td>
<td style="text-align:center">【必需】创建日期</td>
</tr>
<tr>
<td style="text-align:center">updated</td>
<td style="text-align:center">【可选】更新日期</td>
</tr>
<tr>
<td style="text-align:center">type</td>
<td style="text-align:center">【必需】页面类型</td>
</tr>
<tr>
<td style="text-align:center">description</td>
<td style="text-align:center">【可选】页面描述</td>
</tr>
<tr>
<td style="text-align:center">top_img</td>
<td style="text-align:center">【可选】顶部图片</td>
</tr>
<tr>
<td style="text-align:center">aside</td>
<td style="text-align:center">【可选】显示侧边栏</td>
</tr>
<tr>
<td style="text-align:center">aplayer</td>
<td style="text-align:center">【可选】加载Aplayer</td>
</tr>
<tr>
<td style="text-align:center">keyworads</td>
<td style="text-align:center">【可选】页面关键字</td>
</tr>
</tbody>
</table>
<h2 id="3、文章页">3、文章页</h2>
<p>创建命令为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文章命令&quot;</span></span><br></pre></td></tr></table></figure>
<p>同上述基础页介绍，具体属性等可参照下面的参考资料。</p>
<h2 id="4、页面设置">4、页面设置</h2>
<p>打开根目录下的***_config.yml***文件可以看到下面的属性：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#site</span></span><br><span class="line">title: (1)</span><br><span class="line">description: (2)</span><br><span class="line">author: (3)</span><br><span class="line">language: 默认en,可修改</span><br><span class="line">email: <span class="string">&#x27;邮箱地址&#x27;</span></span><br></pre></td></tr></table></figure>
<p>相应位置如下图：</p>
<div align="center">
    	<img src="https://gitee.com/Zhao-zhao2001/images/raw/master/img/%E4%B8%8B%E8%BD%BD.png">  
    	<img src="https://gitee.com/Zhao-zhao2001/images/raw/master/img/20210408212212.png">
</div>
后续会写对butterfly的美化过程。
<h1>三、参考资料</h1>
<p>【1】<a href="https://hexo.io/docs/">Hexo文档</a><br>
【2】<a href="https://butterfly.js.org/posts/21cfbf15/">Jerry大佬教程</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>PicGo + Gitee 搭建免费图床</title>
    <url>/2021/04/09/PicGo-Gitee-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h2 id="1、前言">1、前言</h2>
<p>搭建好自己的博客之后，非常激动啊！！！迫不及待的想写一篇文章来试试水，在往博客中插入图片时遇到了一个很大的问题：图片路径哪里来？由于搭建的是静态博客，如果将图片存放在本地硬盘空间内，网络端访问必然会产生无法获取图片的问题！玛莎卡？将图片存放在主题的 /source/img 文件夹下再在使用时使用相对路径？</p>
<p>细思极恐啊！当图片数量众多，项目文件必然臃肿，部署到云端也就更加慢了。在网上查找解决方法时发现可以搭建 <em><strong>图床</strong></em>  ，顾名思义就是云端用于存储图片的服务器吧，<a href="http://xn--SM-pv2cohk92bfhaq68bfrqkgnrupuf4a.MS">网上现在主流图床有SM.MS</a>、腾讯云COS、Github图床、七牛、阿里云等，当然免费的图床主推Github和Gitee了，但是Github在国外时不时无法连接，而且速度肯定没有国内的码云快了，当然使用阿里云和腾讯云那些就不比了（白嫖真香！）。所以这里就采用了 <u><em><strong>Gitee + PicGo</strong></em></u> 搭建自己的图床。</p>
<p>注：使用码云搭建的图床具有对图片大小的限制，超过1MB大小的图片需要登录才能进行显示，因此这里提供一个用于压缩图片的网站：</p>
<p><em><strong><a href="https://tinypng.com/">TingPNG:<u>压缩图片</u></a></strong></em></p>
<h2 id="2、合成材料">2、合成材料</h2>
<table>
<thead>
<tr>
<th style="text-align:left">码云（Gitee）账号，没有的可以创建</th>
<th><a href="https://gitee.com/">https://gitee.com/</a></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">PicGo软件</td>
<td><a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0-beta.5">https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0-beta.5</a></td>
</tr>
</tbody>
</table>
<p>注：<a href="https://github.com/Molunerfinn/PicGo">PicGo开源项目地址，可以查看使用文档</a></p>
<h2 id="3、Gitee准备">3、Gitee准备</h2>
<p>类似于Github，先创建一个仓库，这里姑且命名为images，在该仓库中创建一个文件夹用于存放图片（也可以不创建），这里使用img作为文件夹名称。</p>
<p><img src="https://gitee.com/Zhao-zhao2001/images/raw/master/img/20210409203754.png" alt="alt 示例"></p>
<p>创建仓库时需要添加开源许可证啥的，跟着走就行，记得“是否开源”选择“公开”。</p>
<p><img src="https://gitee.com/Zhao-zhao2001/images/raw/master/img/20210409204152.png" alt="alt acejha"></p>
<p>这些结束后，需要创建一个token，下面会用到这个私人令牌，具体方法为：“个人主页→个人设置→私人令牌→生成新令牌”，添加描述后默认勾选提交即可，复制到剪贴板备用。在私人令牌管理界面可以对令牌进行删除、修改和重新生成等操作。</p>
<h2 id="4、PicGo配置">4、PicGo配置</h2>
<p>安装好对应系统的PicGO后，在插件设置中找到Gitee-uploader插件安装，注意安装后重启软件。在正确安装的情况下，重启应用打开图床设置可以找到gitee选项。</p>
<p><img src="https://gitee.com/Zhao-zhao2001/images/raw/master/img/20210409205044.png" alt="alt jhhg"></p>
<p>gitee设置界面，相关参数如下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">repo</th>
<th style="text-align:center">【必需】仓库名，见上文图片注释</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">master</td>
<td style="text-align:center">【可选】默认master</td>
</tr>
<tr>
<td style="text-align:center">token</td>
<td style="text-align:center">【必需】上文中生成的令牌</td>
</tr>
<tr>
<td style="text-align:center">path</td>
<td style="text-align:center">【可选】如果上文创建的话，可填img；反之可不填</td>
</tr>
<tr>
<td style="text-align:center">customPath和customUrl</td>
<td style="text-align:center">无需配置</td>
</tr>
</tbody>
</table>
<p><img src="https://gitee.com/Zhao-zhao2001/images/raw/master/img/20210409205324.png" alt="alt shiji"></p>
<p>点击确定和设为默认图床即可。</p>
<h2 id="5、说明">5、说明</h2>
<p>在上传区，可以选择拖拽上传，也可以点击剪贴板上传直接将截图上传，上传成功的话会有系统消息提醒。同时，在下方可以选择返回值的格式，返回值会在剪贴板中保留，在编写文档时直接粘贴即可。相册中可以查看已经上传的图片，香的一批啊有木有！</p>
<p>最后附上一个我个人经常选择图片的网站：<a href="https://beta.bz.zzzmh.cn/index">极简壁纸</a></p>
<p>参考：<a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a></p>
]]></content>
      <categories>
        <category>Gitee</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>图床</tag>
        <tag>Gitee</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/04/05/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
